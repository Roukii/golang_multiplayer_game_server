// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/world.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Universe {

  /// <summary>Holder for reflection information generated from proto/world.proto</summary>
  public static partial class WorldReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/world.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WorldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFwcm90by93b3JsZC5wcm90bxIIdW5pdmVyc2UaG2dvb2dsZS9wcm90b2J1",
            "Zi9lbXB0eS5wcm90byI0ChFHZXRXb3JsZHNSZXNwb25zZRIfCgZ3b3JsZHMY",
            "ASADKAsyDy51bml2ZXJzZS5Xb3JsZCImChFFbnRlcldvcmxkUmVxdWVzdBIR",
            "Cgl3b3JsZFVVSUQYASABKAkihQEKEkVudGVyV29ybGRSZXNwb25zZRIeCgV3",
            "b3JsZBgBIAEoCzIPLnVuaXZlcnNlLldvcmxkEh8KBmNodW5rcxgCIAMoCzIP",
            "LnVuaXZlcnNlLkNodW5rEi4KDWR5bmFtaWNFbnRpdHkYAyADKAsyFy51bml2",
            "ZXJzZS5EeW5hbWljRW50aXR5IigKEExvYWRDaHVua1JlcXVlc3QSFAoMdmll",
            "d0Rpc3RhbmNlGAEgASgFImQKEUxvYWRDaHVua1Jlc3BvbnNlEh8KBmNodW5r",
            "cxgDIAMoCzIPLnVuaXZlcnNlLkNodW5rEi4KDWR5bmFtaWNFbnRpdHkYBCAD",
            "KAsyFy51bml2ZXJzZS5EeW5hbWljRW50aXR5IjwKEUVudGVyQ2h1bmtSZXF1",
            "ZXN0EhEKCWNodW5rVXVpZBgBIAEoCRIUCgx2aWV3RGlzdGFuY2UYAiABKAUi",
            "ZQoSRW50ZXJDaHVua1Jlc3BvbnNlEh8KBmNodW5rcxgBIAMoCzIPLnVuaXZl",
            "cnNlLkNodW5rEi4KDWR5bmFtaWNFbnRpdHkYAiADKAsyFy51bml2ZXJzZS5E",
            "eW5hbWljRW50aXR5IqABChJDaHVua1N0cmVhbVJlcXVlc3QSRgoYaW50ZXJh",
            "Y3RXaXRoU3RhdGljRW50aXR5GAEgASgLMiIudW5pdmVyc2UuSW50ZXJhY3RX",
            "aXRoU3RhdGljRW50aXR5SAASOAoRcGxhY2VTdGF0aWNFbnRpdHkYAiABKAsy",
            "Gy51bml2ZXJzZS5QbGFjZVN0YXRpY0VudGl0eUgAQggKBmFjdGlvbiLNAQoT",
            "Q2h1bmtTdHJlYW1SZXNwb25zZRI0Cg9hZGRTdGF0aWNFbnRpdHkYASABKAsy",
            "GS51bml2ZXJzZS5BZGRTdGF0aWNFbnRpdHlIABI6ChJ1cGRhdGVTdGF0aWNF",
            "bnRpdHkYAiABKAsyHC51bml2ZXJzZS5VcGRhdGVTdGF0aWNFbnRpdHlIABI6",
            "ChJyZW1vdmVTdGF0aWNFbnRpdHkYAyABKAsyHC51bml2ZXJzZS5SZW1vdmVT",
            "dGF0aWNFbnRpdHlIAEIICgZhY3Rpb24iKAoSUmVtb3ZlU3RhdGljRW50aXR5",
            "EhIKCmVudGl0eVV1aWQYASABKAkiNAoYSW50ZXJhY3RXaXRoU3RhdGljRW50",
            "aXR5EhgKEHN0YXRpY0VudGl0eVV1aWQYASABKAkiLQoRUGxhY2VTdGF0aWNF",
            "bnRpdHkSGAoQc3RhdGljRW50aXR5VXVpZBgBIAEoCSI5Cg9BZGRTdGF0aWNF",
            "bnRpdHkSJgoGZW50aXR5GAEgASgLMhYudW5pdmVyc2UuU3RhdGljRW50aXR5",
            "IjwKElVwZGF0ZVN0YXRpY0VudGl0eRImCgZlbnRpdHkYASABKAsyFi51bml2",
            "ZXJzZS5TdGF0aWNFbnRpdHkiIwoTQ3JlYXRlUGxheWVyUmVxdWVzdBIMCgRu",
            "YW1lGAEgASgJIqkBChRDcmVhdGVQbGF5ZXJSZXNwb25zZRIgCgZwbGF5ZXIY",
            "ASABKAsyEC51bml2ZXJzZS5QbGF5ZXISHgoFd29ybGQYAiABKAsyDy51bml2",
            "ZXJzZS5Xb3JsZBIfCgZjaHVua3MYAyADKAsyDy51bml2ZXJzZS5DaHVuaxIu",
            "Cg1keW5hbWljRW50aXR5GAQgAygLMhcudW5pdmVyc2UuRHluYW1pY0VudGl0",
            "eSIzCg9HZXRQbGF5ZXJzUmVwbHkSIAoGcGxheWVyGAEgAygLMhAudW5pdmVy",
            "c2UuUGxheWVyIoACChNQbGF5ZXJTdHJlYW1SZXF1ZXN0Eh4KBG1vdmUYASAB",
            "KAsyDi51bml2ZXJzZS5Nb3ZlSAASIgoGYXR0YWNrGAIgASgLMhAudW5pdmVy",
            "c2UuQXR0YWNrSAASJgoIaW50ZXJhY3QYAyABKAsyEi51bml2ZXJzZS5JbnRl",
            "cmFjdEgAEiMKBXNraWxsGAQgASgLMhIudW5pdmVyc2UuVXNlU2tpbGxIABIc",
            "CgNoaXQYBSABKAsyDS51bml2ZXJzZS5IaXRIABIwCgpkaXNjb25uZWN0GAYg",
            "ASgLMhoudW5pdmVyc2UuUGxheWVyRGlzY29ubmVjdEgAQggKBmFjdGlvbiLz",
            "AwoUUGxheWVyU3RyZWFtUmVzcG9uc2USDAoEdXVpZBgBIAEoCRI0Cg1keW5h",
            "bWljRW50aXR5GAIgASgOMhsudW5pdmVyc2UuRHluYW1pY0VudGl0eVR5cGVI",
            "ABIyCgxzdGF0aWNFbnRpdHkYAyABKA4yGi51bml2ZXJzZS5TdGF0aWNFbnRp",
            "dHlUeXBlSAASHgoEbW92ZRgEIAEoCzIOLnVuaXZlcnNlLk1vdmVIARIsCglh",
            "ZGRFbnRpdHkYBSABKAsyFy51bml2ZXJzZS5EeW5hbWljRW50aXR5SAESFgoM",
            "ZGVsZXRlRW50aXR5GAYgASgISAESHAoDaGl0GAcgASgLMg0udW5pdmVyc2Uu",
            "SGl0SAESIgoGYXR0YWNrGAggASgLMhAudW5pdmVyc2UuQXR0YWNrSAESIwoF",
            "c2tpbGwYCSABKAsyEi51bml2ZXJzZS5Vc2VTa2lsbEgBEjAKCmRpc2Nvbm5l",
            "Y3QYCiABKAsyGi51bml2ZXJzZS5QbGF5ZXJEaXNjb25uZWN0SAESKgoHY29u",
            "bmVjdBgLIAEoCzIXLnVuaXZlcnNlLlBsYXllckNvbm5lY3RIARImCghpbnRl",
            "cmFjdBgMIAEoCzISLnVuaXZlcnNlLkludGVyYWN0SAFCBgoEaW5mb0IICgZh",
            "Y3Rpb24iIwoQUGxheWVyRGlzY29ubmVjdBIPCgdtZXNzYWdlGAEgASgJIjEK",
            "DVBsYXllckNvbm5lY3QSIAoGcGxheWVyGAEgASgLMhAudW5pdmVyc2UuUGxh",
            "eWVyIpABCgNIaXQSDgoGZGFtYWdlGAEgASgDEg4KBmhwTGVmdBgCIAEoAxIj",
            "Cghwb3NpdGlvbhgDIAEoCzIRLnVuaXZlcnNlLlZlY3RvcjMSGQoRZHluYW1p",
            "Y0VudGl0eVVVSUQYBCADKAkSGAoQc3RhdGljRW50aXR5VVVJRBgFIAMoCRIP",
            "Cgdza2lsbElkGAYgASgJIooBCghJbnRlcmFjdBIMCgR1dWlkGAEgASgJEjQK",
            "DWR5bmFtaWNFbnRpdHkYAiABKA4yGy51bml2ZXJzZS5EeW5hbWljRW50aXR5",
            "VHlwZUgAEjIKDHN0YXRpY0VudGl0eRgDIAEoDjIaLnVuaXZlcnNlLlN0YXRp",
            "Y0VudGl0eVR5cGVIAEIGCgRpbmZvIl8KBkF0dGFjaxIZChFkeW5hbWljRW50",
            "aXR5VVVJRBgBIAMoCRIYChBzdGF0aWNFbnRpdHlVVUlEGAIgAygJEiAKBWFu",
            "Z2xlGAMgASgLMhEudW5pdmVyc2UuVmVjdG9yMyKeAQoIVXNlU2tpbGwSKAoI",
            "cG9zaXRpb24YASABKAsyES51bml2ZXJzZS5WZWN0b3IzSACIAQESJQoFYW5n",
            "bGUYAiABKAsyES51bml2ZXJzZS5WZWN0b3IzSAGIAQESHgoFc2tpbGwYAyAB",
            "KAsyDy51bml2ZXJzZS5Ta2lsbBIKCgJpZBgEIAEoCUILCglfcG9zaXRpb25C",
            "CAoGX2FuZ2xlIhoKBVNraWxsEhEKCXNraWxsVXVpZBgBIAEoCSIkCg5Db25u",
            "ZWN0UmVxdWVzdBISCgpwbGF5ZXJVdWlkGAEgASgJIqQBCg9Db25uZWN0UmVz",
            "cG9uc2USIAoGcGxheWVyGAEgASgLMhAudW5pdmVyc2UuUGxheWVyEh4KBXdv",
            "cmxkGAIgASgLMg8udW5pdmVyc2UuV29ybGQSHwoGY2h1bmtzGAMgAygLMg8u",
            "dW5pdmVyc2UuQ2h1bmsSLgoNZHluYW1pY0VudGl0eRgEIAMoCzIXLnVuaXZl",
            "cnNlLkR5bmFtaWNFbnRpdHkiWQoGUGxheWVyEgwKBG5hbWUYASABKAkSDAoE",
            "dXVpZBgCIAEoCRINCgVsZXZlbBgDIAEoBRIkCghwb3NpdGlvbhgEIAEoCzIS",
            "LnVuaXZlcnNlLlBvc2l0aW9uIq4BCgVXb3JsZBIMCgR1dWlkGAEgASgJEgwK",
            "BG5hbWUYAiABKAkSDQoFbGV2ZWwYAyABKAUSDgoGbGVuZ3RoGAQgASgFEg0K",
            "BXdpZHRoGAUgASgFEg8KB3NjYWxlWFkYBiABKAUSEwoLc2NhbGVIZWlnaHQY",
            "ByABKAUSDAoEc2VlZBgIIAEoCRITCgtjaHVua193aWR0aBgJIAEoBRISCgpw",
            "b3B1bGF0aW9uGAogASgFIjoKBE1vdmUSJAoIcG9zaXRpb24YAiABKAsyEi51",
            "bml2ZXJzZS5Qb3NpdGlvbhIMCgRqdW1wGAMgASgIIooBCgVDaHVuaxIMCgR1",
            "dWlkGAEgASgJEiYKCHBvc2l0aW9uGAIgASgLMhQudW5pdmVyc2UuVmVjdG9y",
            "MkludBIsCgxzdGF0aWNFbnRpdHkYAyADKAsyFi51bml2ZXJzZS5TdGF0aWNF",
            "bnRpdHkSHQoFdGlsZXMYBCADKAsyDi51bml2ZXJzZS5UaWxlIjsKBFRpbGUS",
            "IAoEdHlwZRgBIAEoDjISLnVuaXZlcnNlLlRpbGVUeXBlEhEKCWVsZXZhdGlv",
            "bhgCIAEoAiJyCghQb3NpdGlvbhIoCghwb3NpdGlvbhgBIAEoCzIRLnVuaXZl",
            "cnNlLlZlY3RvcjNIAIgBARIlCgVhbmdsZRgCIAEoCzIRLnVuaXZlcnNlLlZl",
            "Y3RvcjNIAYgBAUILCglfcG9zaXRpb25CCAoGX2FuZ2xlIioKB1ZlY3RvcjMS",
            "CQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAIiHwoHVmVjdG9yMhIJ",
            "CgF4GAEgASgCEgkKAXkYAiABKAIiIgoKVmVjdG9yMkludBIJCgF4GAEgASgF",
            "EgkKAXkYAiABKAUifAoNRHluYW1pY0VudGl0eRIMCgR1dWlkGAEgASgJEgwK",
            "BG5hbWUYAiABKAkSJAoIcG9zaXRpb24YAyABKAsyEi51bml2ZXJzZS5Qb3Np",
            "dGlvbhIpCgR0eXBlGAQgASgOMhsudW5pdmVyc2UuRHluYW1pY0VudGl0eVR5",
            "cGUiegoMU3RhdGljRW50aXR5EgwKBHV1aWQYASABKAkSDAoEbmFtZRgCIAEo",
            "CRIkCghwb3NpdGlvbhgDIAEoCzISLnVuaXZlcnNlLlBvc2l0aW9uEigKBHR5",
            "cGUYBCABKA4yGi51bml2ZXJzZS5TdGF0aWNFbnRpdHlUeXBlKkkKCFRpbGVU",
            "eXBlEggKBERpcnQQABIJCgVHcmFzcxABEggKBFJvY2sQAhIKCgZGb3Jlc3QQ",
            "AxIICgRTYW5kEAQSCAoEU25vdxAFKi0KEUR5bmFtaWNFbnRpdHlUeXBlEgoK",
            "BlBMQVlFUhAAEgwKCENSRUFUVVJFEAEqVAoQU3RhdGljRW50aXR5VHlwZRIJ",
            "CgVFbXB0eRAAEgwKCEJ1aWxkaW5nEAESDgoKQ2h1bmtFbnRyeRACEg0KCVJl",
            "c3NvdXJjZRADEggKBEl0ZW0QBDKwAgoMQ2h1bmtTZXJ2aWNlEkIKCUdldFdv",
            "cmxkcxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRobLnVuaXZlcnNlLkdldFdv",
            "cmxkc1Jlc3BvbnNlIgASSQoKRW50ZXJXb3JsZBIbLnVuaXZlcnNlLkVudGVy",
            "V29ybGRSZXF1ZXN0GhwudW5pdmVyc2UuRW50ZXJXb3JsZFJlc3BvbnNlIgAS",
            "RgoJTG9hZENodW5rEhoudW5pdmVyc2UuTG9hZENodW5rUmVxdWVzdBobLnVu",
            "aXZlcnNlLkxvYWRDaHVua1Jlc3BvbnNlIgASSQoGU3RyZWFtEhwudW5pdmVy",
            "c2UuQ2h1bmtTdHJlYW1SZXF1ZXN0Gh0udW5pdmVyc2UuQ2h1bmtTdHJlYW1S",
            "ZXNwb25zZSIAMAEytAIKDVBsYXllclNlcnZpY2USTwoMQ3JlYXRlUGxheWVy",
            "Eh0udW5pdmVyc2UuQ3JlYXRlUGxheWVyUmVxdWVzdBoeLnVuaXZlcnNlLkNy",
            "ZWF0ZVBsYXllclJlc3BvbnNlIgASQQoKR2V0UGxheWVycxIWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRoZLnVuaXZlcnNlLkdldFBsYXllcnNSZXBseSIAEkAK",
            "B0Nvbm5lY3QSGC51bml2ZXJzZS5Db25uZWN0UmVxdWVzdBoZLnVuaXZlcnNl",
            "LkNvbm5lY3RSZXNwb25zZSIAEk0KBlN0cmVhbRIdLnVuaXZlcnNlLlBsYXll",
            "clN0cmVhbVJlcXVlc3QaHi51bml2ZXJzZS5QbGF5ZXJTdHJlYW1SZXNwb25z",
            "ZSIAKAEwAUItWitnaXRodWIuY29tL1JvdWtpaS9wb2NrX211bHRpcGxheWVy",
            "L3VuaXZlcnNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Universe.TileType), typeof(global::Universe.DynamicEntityType), typeof(global::Universe.StaticEntityType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.GetWorldsResponse), global::Universe.GetWorldsResponse.Parser, new[]{ "Worlds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.EnterWorldRequest), global::Universe.EnterWorldRequest.Parser, new[]{ "WorldUUID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.EnterWorldResponse), global::Universe.EnterWorldResponse.Parser, new[]{ "World", "Chunks", "DynamicEntity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.LoadChunkRequest), global::Universe.LoadChunkRequest.Parser, new[]{ "ViewDistance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.LoadChunkResponse), global::Universe.LoadChunkResponse.Parser, new[]{ "Chunks", "DynamicEntity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.EnterChunkRequest), global::Universe.EnterChunkRequest.Parser, new[]{ "ChunkUuid", "ViewDistance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.EnterChunkResponse), global::Universe.EnterChunkResponse.Parser, new[]{ "Chunks", "DynamicEntity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.ChunkStreamRequest), global::Universe.ChunkStreamRequest.Parser, new[]{ "InteractWithStaticEntity", "PlaceStaticEntity" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.ChunkStreamResponse), global::Universe.ChunkStreamResponse.Parser, new[]{ "AddStaticEntity", "UpdateStaticEntity", "RemoveStaticEntity" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.RemoveStaticEntity), global::Universe.RemoveStaticEntity.Parser, new[]{ "EntityUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.InteractWithStaticEntity), global::Universe.InteractWithStaticEntity.Parser, new[]{ "StaticEntityUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.PlaceStaticEntity), global::Universe.PlaceStaticEntity.Parser, new[]{ "StaticEntityUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.AddStaticEntity), global::Universe.AddStaticEntity.Parser, new[]{ "Entity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.UpdateStaticEntity), global::Universe.UpdateStaticEntity.Parser, new[]{ "Entity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.CreatePlayerRequest), global::Universe.CreatePlayerRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.CreatePlayerResponse), global::Universe.CreatePlayerResponse.Parser, new[]{ "Player", "World", "Chunks", "DynamicEntity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.GetPlayersReply), global::Universe.GetPlayersReply.Parser, new[]{ "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.PlayerStreamRequest), global::Universe.PlayerStreamRequest.Parser, new[]{ "Move", "Attack", "Interact", "Skill", "Hit", "Disconnect" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.PlayerStreamResponse), global::Universe.PlayerStreamResponse.Parser, new[]{ "Uuid", "DynamicEntity", "StaticEntity", "Move", "AddEntity", "DeleteEntity", "Hit", "Attack", "Skill", "Disconnect", "Connect", "Interact" }, new[]{ "Info", "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.PlayerDisconnect), global::Universe.PlayerDisconnect.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.PlayerConnect), global::Universe.PlayerConnect.Parser, new[]{ "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Hit), global::Universe.Hit.Parser, new[]{ "Damage", "HpLeft", "Position", "DynamicEntityUUID", "StaticEntityUUID", "SkillId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Interact), global::Universe.Interact.Parser, new[]{ "Uuid", "DynamicEntity", "StaticEntity" }, new[]{ "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Attack), global::Universe.Attack.Parser, new[]{ "DynamicEntityUUID", "StaticEntityUUID", "Angle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.UseSkill), global::Universe.UseSkill.Parser, new[]{ "Position", "Angle", "Skill", "Id" }, new[]{ "Position", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Skill), global::Universe.Skill.Parser, new[]{ "SkillUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.ConnectRequest), global::Universe.ConnectRequest.Parser, new[]{ "PlayerUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.ConnectResponse), global::Universe.ConnectResponse.Parser, new[]{ "Player", "World", "Chunks", "DynamicEntity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Player), global::Universe.Player.Parser, new[]{ "Name", "Uuid", "Level", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.World), global::Universe.World.Parser, new[]{ "Uuid", "Name", "Level", "Length", "Width", "ScaleXY", "ScaleHeight", "Seed", "ChunkWidth", "Population" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Move), global::Universe.Move.Parser, new[]{ "Position", "Jump" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Chunk), global::Universe.Chunk.Parser, new[]{ "Uuid", "Position", "StaticEntity", "Tiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Tile), global::Universe.Tile.Parser, new[]{ "Type", "Elevation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Position), global::Universe.Position.Parser, new[]{ "Position_", "Angle" }, new[]{ "Position", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Vector3), global::Universe.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Vector2), global::Universe.Vector2.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.Vector2Int), global::Universe.Vector2Int.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.DynamicEntity), global::Universe.DynamicEntity.Parser, new[]{ "Uuid", "Name", "Position", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Universe.StaticEntity), global::Universe.StaticEntity.Parser, new[]{ "Uuid", "Name", "Position", "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TileType {
    [pbr::OriginalName("Dirt")] Dirt = 0,
    [pbr::OriginalName("Grass")] Grass = 1,
    [pbr::OriginalName("Rock")] Rock = 2,
    [pbr::OriginalName("Forest")] Forest = 3,
    [pbr::OriginalName("Sand")] Sand = 4,
    [pbr::OriginalName("Snow")] Snow = 5,
  }

  public enum DynamicEntityType {
    [pbr::OriginalName("PLAYER")] Player = 0,
    [pbr::OriginalName("CREATURE")] Creature = 1,
  }

  public enum StaticEntityType {
    [pbr::OriginalName("Empty")] Empty = 0,
    [pbr::OriginalName("Building")] Building = 1,
    [pbr::OriginalName("ChunkEntry")] ChunkEntry = 2,
    [pbr::OriginalName("Ressource")] Ressource = 3,
    [pbr::OriginalName("Item")] Item = 4,
  }

  #endregion

  #region Messages
  public sealed partial class GetWorldsResponse : pb::IMessage<GetWorldsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetWorldsResponse> _parser = new pb::MessageParser<GetWorldsResponse>(() => new GetWorldsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorldsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldsResponse(GetWorldsResponse other) : this() {
      worlds_ = other.worlds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldsResponse Clone() {
      return new GetWorldsResponse(this);
    }

    /// <summary>Field number for the "worlds" field.</summary>
    public const int WorldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Universe.World> _repeated_worlds_codec
        = pb::FieldCodec.ForMessage(10, global::Universe.World.Parser);
    private readonly pbc::RepeatedField<global::Universe.World> worlds_ = new pbc::RepeatedField<global::Universe.World>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.World> Worlds {
      get { return worlds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorldsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorldsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!worlds_.Equals(other.worlds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= worlds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      worlds_.WriteTo(output, _repeated_worlds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      worlds_.WriteTo(ref output, _repeated_worlds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += worlds_.CalculateSize(_repeated_worlds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorldsResponse other) {
      if (other == null) {
        return;
      }
      worlds_.Add(other.worlds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            worlds_.AddEntriesFrom(input, _repeated_worlds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            worlds_.AddEntriesFrom(ref input, _repeated_worlds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterWorldRequest : pb::IMessage<EnterWorldRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterWorldRequest> _parser = new pb::MessageParser<EnterWorldRequest>(() => new EnterWorldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterWorldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorldRequest(EnterWorldRequest other) : this() {
      worldUUID_ = other.worldUUID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorldRequest Clone() {
      return new EnterWorldRequest(this);
    }

    /// <summary>Field number for the "worldUUID" field.</summary>
    public const int WorldUUIDFieldNumber = 1;
    private string worldUUID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorldUUID {
      get { return worldUUID_; }
      set {
        worldUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterWorldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterWorldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldUUID != other.WorldUUID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldUUID.Length != 0) hash ^= WorldUUID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WorldUUID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorldUUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WorldUUID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorldUUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldUUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorldUUID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterWorldRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorldUUID.Length != 0) {
        WorldUUID = other.WorldUUID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorldUUID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WorldUUID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterWorldResponse : pb::IMessage<EnterWorldResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterWorldResponse> _parser = new pb::MessageParser<EnterWorldResponse>(() => new EnterWorldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterWorldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorldResponse(EnterWorldResponse other) : this() {
      world_ = other.world_ != null ? other.world_.Clone() : null;
      chunks_ = other.chunks_.Clone();
      dynamicEntity_ = other.dynamicEntity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorldResponse Clone() {
      return new EnterWorldResponse(this);
    }

    /// <summary>Field number for the "world" field.</summary>
    public const int WorldFieldNumber = 1;
    private global::Universe.World world_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.World World {
      get { return world_; }
      set {
        world_ = value;
      }
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Universe.Chunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(18, global::Universe.Chunk.Parser);
    private readonly pbc::RepeatedField<global::Universe.Chunk> chunks_ = new pbc::RepeatedField<global::Universe.Chunk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Chunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Universe.DynamicEntity> _repeated_dynamicEntity_codec
        = pb::FieldCodec.ForMessage(26, global::Universe.DynamicEntity.Parser);
    private readonly pbc::RepeatedField<global::Universe.DynamicEntity> dynamicEntity_ = new pbc::RepeatedField<global::Universe.DynamicEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.DynamicEntity> DynamicEntity {
      get { return dynamicEntity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterWorldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterWorldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(World, other.World)) return false;
      if(!chunks_.Equals(other.chunks_)) return false;
      if(!dynamicEntity_.Equals(other.dynamicEntity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (world_ != null) hash ^= World.GetHashCode();
      hash ^= chunks_.GetHashCode();
      hash ^= dynamicEntity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (world_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(World);
      }
      chunks_.WriteTo(output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (world_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(World);
      }
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(ref output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (world_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(World);
      }
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      size += dynamicEntity_.CalculateSize(_repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterWorldResponse other) {
      if (other == null) {
        return;
      }
      if (other.world_ != null) {
        if (world_ == null) {
          World = new global::Universe.World();
        }
        World.MergeFrom(other.World);
      }
      chunks_.Add(other.chunks_);
      dynamicEntity_.Add(other.dynamicEntity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (world_ == null) {
              World = new global::Universe.World();
            }
            input.ReadMessage(World);
            break;
          }
          case 18: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 26: {
            dynamicEntity_.AddEntriesFrom(input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (world_ == null) {
              World = new global::Universe.World();
            }
            input.ReadMessage(World);
            break;
          }
          case 18: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 26: {
            dynamicEntity_.AddEntriesFrom(ref input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadChunkRequest : pb::IMessage<LoadChunkRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadChunkRequest> _parser = new pb::MessageParser<LoadChunkRequest>(() => new LoadChunkRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadChunkRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadChunkRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadChunkRequest(LoadChunkRequest other) : this() {
      viewDistance_ = other.viewDistance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadChunkRequest Clone() {
      return new LoadChunkRequest(this);
    }

    /// <summary>Field number for the "viewDistance" field.</summary>
    public const int ViewDistanceFieldNumber = 1;
    private int viewDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ViewDistance {
      get { return viewDistance_; }
      set {
        viewDistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadChunkRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadChunkRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewDistance != other.ViewDistance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ViewDistance != 0) hash ^= ViewDistance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ViewDistance != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ViewDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ViewDistance != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ViewDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ViewDistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewDistance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadChunkRequest other) {
      if (other == null) {
        return;
      }
      if (other.ViewDistance != 0) {
        ViewDistance = other.ViewDistance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ViewDistance = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ViewDistance = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadChunkResponse : pb::IMessage<LoadChunkResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadChunkResponse> _parser = new pb::MessageParser<LoadChunkResponse>(() => new LoadChunkResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadChunkResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadChunkResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadChunkResponse(LoadChunkResponse other) : this() {
      chunks_ = other.chunks_.Clone();
      dynamicEntity_ = other.dynamicEntity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadChunkResponse Clone() {
      return new LoadChunkResponse(this);
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Universe.Chunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(26, global::Universe.Chunk.Parser);
    private readonly pbc::RepeatedField<global::Universe.Chunk> chunks_ = new pbc::RepeatedField<global::Universe.Chunk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Chunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Universe.DynamicEntity> _repeated_dynamicEntity_codec
        = pb::FieldCodec.ForMessage(34, global::Universe.DynamicEntity.Parser);
    private readonly pbc::RepeatedField<global::Universe.DynamicEntity> dynamicEntity_ = new pbc::RepeatedField<global::Universe.DynamicEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.DynamicEntity> DynamicEntity {
      get { return dynamicEntity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadChunkResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadChunkResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chunks_.Equals(other.chunks_)) return false;
      if(!dynamicEntity_.Equals(other.dynamicEntity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chunks_.GetHashCode();
      hash ^= dynamicEntity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      chunks_.WriteTo(output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(ref output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      size += dynamicEntity_.CalculateSize(_repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadChunkResponse other) {
      if (other == null) {
        return;
      }
      chunks_.Add(other.chunks_);
      dynamicEntity_.Add(other.dynamicEntity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 34: {
            dynamicEntity_.AddEntriesFrom(input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 34: {
            dynamicEntity_.AddEntriesFrom(ref input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterChunkRequest : pb::IMessage<EnterChunkRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterChunkRequest> _parser = new pb::MessageParser<EnterChunkRequest>(() => new EnterChunkRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterChunkRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterChunkRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterChunkRequest(EnterChunkRequest other) : this() {
      chunkUuid_ = other.chunkUuid_;
      viewDistance_ = other.viewDistance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterChunkRequest Clone() {
      return new EnterChunkRequest(this);
    }

    /// <summary>Field number for the "chunkUuid" field.</summary>
    public const int ChunkUuidFieldNumber = 1;
    private string chunkUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChunkUuid {
      get { return chunkUuid_; }
      set {
        chunkUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "viewDistance" field.</summary>
    public const int ViewDistanceFieldNumber = 2;
    private int viewDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ViewDistance {
      get { return viewDistance_; }
      set {
        viewDistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterChunkRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterChunkRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChunkUuid != other.ChunkUuid) return false;
      if (ViewDistance != other.ViewDistance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChunkUuid.Length != 0) hash ^= ChunkUuid.GetHashCode();
      if (ViewDistance != 0) hash ^= ViewDistance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChunkUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChunkUuid);
      }
      if (ViewDistance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ViewDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChunkUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChunkUuid);
      }
      if (ViewDistance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ViewDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChunkUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChunkUuid);
      }
      if (ViewDistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewDistance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterChunkRequest other) {
      if (other == null) {
        return;
      }
      if (other.ChunkUuid.Length != 0) {
        ChunkUuid = other.ChunkUuid;
      }
      if (other.ViewDistance != 0) {
        ViewDistance = other.ViewDistance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChunkUuid = input.ReadString();
            break;
          }
          case 16: {
            ViewDistance = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ChunkUuid = input.ReadString();
            break;
          }
          case 16: {
            ViewDistance = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterChunkResponse : pb::IMessage<EnterChunkResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterChunkResponse> _parser = new pb::MessageParser<EnterChunkResponse>(() => new EnterChunkResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterChunkResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterChunkResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterChunkResponse(EnterChunkResponse other) : this() {
      chunks_ = other.chunks_.Clone();
      dynamicEntity_ = other.dynamicEntity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterChunkResponse Clone() {
      return new EnterChunkResponse(this);
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Universe.Chunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(10, global::Universe.Chunk.Parser);
    private readonly pbc::RepeatedField<global::Universe.Chunk> chunks_ = new pbc::RepeatedField<global::Universe.Chunk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Chunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Universe.DynamicEntity> _repeated_dynamicEntity_codec
        = pb::FieldCodec.ForMessage(18, global::Universe.DynamicEntity.Parser);
    private readonly pbc::RepeatedField<global::Universe.DynamicEntity> dynamicEntity_ = new pbc::RepeatedField<global::Universe.DynamicEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.DynamicEntity> DynamicEntity {
      get { return dynamicEntity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterChunkResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterChunkResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chunks_.Equals(other.chunks_)) return false;
      if(!dynamicEntity_.Equals(other.dynamicEntity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chunks_.GetHashCode();
      hash ^= dynamicEntity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      chunks_.WriteTo(output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(ref output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      size += dynamicEntity_.CalculateSize(_repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterChunkResponse other) {
      if (other == null) {
        return;
      }
      chunks_.Add(other.chunks_);
      dynamicEntity_.Add(other.dynamicEntity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 18: {
            dynamicEntity_.AddEntriesFrom(input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 18: {
            dynamicEntity_.AddEntriesFrom(ref input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChunkStreamRequest : pb::IMessage<ChunkStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChunkStreamRequest> _parser = new pb::MessageParser<ChunkStreamRequest>(() => new ChunkStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChunkStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkStreamRequest(ChunkStreamRequest other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.InteractWithStaticEntity:
          InteractWithStaticEntity = other.InteractWithStaticEntity.Clone();
          break;
        case ActionOneofCase.PlaceStaticEntity:
          PlaceStaticEntity = other.PlaceStaticEntity.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkStreamRequest Clone() {
      return new ChunkStreamRequest(this);
    }

    /// <summary>Field number for the "interactWithStaticEntity" field.</summary>
    public const int InteractWithStaticEntityFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.InteractWithStaticEntity InteractWithStaticEntity {
      get { return actionCase_ == ActionOneofCase.InteractWithStaticEntity ? (global::Universe.InteractWithStaticEntity) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.InteractWithStaticEntity;
      }
    }

    /// <summary>Field number for the "placeStaticEntity" field.</summary>
    public const int PlaceStaticEntityFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.PlaceStaticEntity PlaceStaticEntity {
      get { return actionCase_ == ActionOneofCase.PlaceStaticEntity ? (global::Universe.PlaceStaticEntity) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PlaceStaticEntity;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      InteractWithStaticEntity = 1,
      PlaceStaticEntity = 2,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChunkStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChunkStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InteractWithStaticEntity, other.InteractWithStaticEntity)) return false;
      if (!object.Equals(PlaceStaticEntity, other.PlaceStaticEntity)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.InteractWithStaticEntity) hash ^= InteractWithStaticEntity.GetHashCode();
      if (actionCase_ == ActionOneofCase.PlaceStaticEntity) hash ^= PlaceStaticEntity.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.InteractWithStaticEntity) {
        output.WriteRawTag(10);
        output.WriteMessage(InteractWithStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.PlaceStaticEntity) {
        output.WriteRawTag(18);
        output.WriteMessage(PlaceStaticEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.InteractWithStaticEntity) {
        output.WriteRawTag(10);
        output.WriteMessage(InteractWithStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.PlaceStaticEntity) {
        output.WriteRawTag(18);
        output.WriteMessage(PlaceStaticEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.InteractWithStaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteractWithStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.PlaceStaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceStaticEntity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChunkStreamRequest other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.InteractWithStaticEntity:
          if (InteractWithStaticEntity == null) {
            InteractWithStaticEntity = new global::Universe.InteractWithStaticEntity();
          }
          InteractWithStaticEntity.MergeFrom(other.InteractWithStaticEntity);
          break;
        case ActionOneofCase.PlaceStaticEntity:
          if (PlaceStaticEntity == null) {
            PlaceStaticEntity = new global::Universe.PlaceStaticEntity();
          }
          PlaceStaticEntity.MergeFrom(other.PlaceStaticEntity);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Universe.InteractWithStaticEntity subBuilder = new global::Universe.InteractWithStaticEntity();
            if (actionCase_ == ActionOneofCase.InteractWithStaticEntity) {
              subBuilder.MergeFrom(InteractWithStaticEntity);
            }
            input.ReadMessage(subBuilder);
            InteractWithStaticEntity = subBuilder;
            break;
          }
          case 18: {
            global::Universe.PlaceStaticEntity subBuilder = new global::Universe.PlaceStaticEntity();
            if (actionCase_ == ActionOneofCase.PlaceStaticEntity) {
              subBuilder.MergeFrom(PlaceStaticEntity);
            }
            input.ReadMessage(subBuilder);
            PlaceStaticEntity = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Universe.InteractWithStaticEntity subBuilder = new global::Universe.InteractWithStaticEntity();
            if (actionCase_ == ActionOneofCase.InteractWithStaticEntity) {
              subBuilder.MergeFrom(InteractWithStaticEntity);
            }
            input.ReadMessage(subBuilder);
            InteractWithStaticEntity = subBuilder;
            break;
          }
          case 18: {
            global::Universe.PlaceStaticEntity subBuilder = new global::Universe.PlaceStaticEntity();
            if (actionCase_ == ActionOneofCase.PlaceStaticEntity) {
              subBuilder.MergeFrom(PlaceStaticEntity);
            }
            input.ReadMessage(subBuilder);
            PlaceStaticEntity = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChunkStreamResponse : pb::IMessage<ChunkStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChunkStreamResponse> _parser = new pb::MessageParser<ChunkStreamResponse>(() => new ChunkStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChunkStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkStreamResponse(ChunkStreamResponse other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.AddStaticEntity:
          AddStaticEntity = other.AddStaticEntity.Clone();
          break;
        case ActionOneofCase.UpdateStaticEntity:
          UpdateStaticEntity = other.UpdateStaticEntity.Clone();
          break;
        case ActionOneofCase.RemoveStaticEntity:
          RemoveStaticEntity = other.RemoveStaticEntity.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkStreamResponse Clone() {
      return new ChunkStreamResponse(this);
    }

    /// <summary>Field number for the "addStaticEntity" field.</summary>
    public const int AddStaticEntityFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.AddStaticEntity AddStaticEntity {
      get { return actionCase_ == ActionOneofCase.AddStaticEntity ? (global::Universe.AddStaticEntity) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.AddStaticEntity;
      }
    }

    /// <summary>Field number for the "updateStaticEntity" field.</summary>
    public const int UpdateStaticEntityFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.UpdateStaticEntity UpdateStaticEntity {
      get { return actionCase_ == ActionOneofCase.UpdateStaticEntity ? (global::Universe.UpdateStaticEntity) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.UpdateStaticEntity;
      }
    }

    /// <summary>Field number for the "removeStaticEntity" field.</summary>
    public const int RemoveStaticEntityFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.RemoveStaticEntity RemoveStaticEntity {
      get { return actionCase_ == ActionOneofCase.RemoveStaticEntity ? (global::Universe.RemoveStaticEntity) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.RemoveStaticEntity;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      AddStaticEntity = 1,
      UpdateStaticEntity = 2,
      RemoveStaticEntity = 3,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChunkStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChunkStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddStaticEntity, other.AddStaticEntity)) return false;
      if (!object.Equals(UpdateStaticEntity, other.UpdateStaticEntity)) return false;
      if (!object.Equals(RemoveStaticEntity, other.RemoveStaticEntity)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.AddStaticEntity) hash ^= AddStaticEntity.GetHashCode();
      if (actionCase_ == ActionOneofCase.UpdateStaticEntity) hash ^= UpdateStaticEntity.GetHashCode();
      if (actionCase_ == ActionOneofCase.RemoveStaticEntity) hash ^= RemoveStaticEntity.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.AddStaticEntity) {
        output.WriteRawTag(10);
        output.WriteMessage(AddStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.UpdateStaticEntity) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.RemoveStaticEntity) {
        output.WriteRawTag(26);
        output.WriteMessage(RemoveStaticEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.AddStaticEntity) {
        output.WriteRawTag(10);
        output.WriteMessage(AddStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.UpdateStaticEntity) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.RemoveStaticEntity) {
        output.WriteRawTag(26);
        output.WriteMessage(RemoveStaticEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.AddStaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.UpdateStaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateStaticEntity);
      }
      if (actionCase_ == ActionOneofCase.RemoveStaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoveStaticEntity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChunkStreamResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.AddStaticEntity:
          if (AddStaticEntity == null) {
            AddStaticEntity = new global::Universe.AddStaticEntity();
          }
          AddStaticEntity.MergeFrom(other.AddStaticEntity);
          break;
        case ActionOneofCase.UpdateStaticEntity:
          if (UpdateStaticEntity == null) {
            UpdateStaticEntity = new global::Universe.UpdateStaticEntity();
          }
          UpdateStaticEntity.MergeFrom(other.UpdateStaticEntity);
          break;
        case ActionOneofCase.RemoveStaticEntity:
          if (RemoveStaticEntity == null) {
            RemoveStaticEntity = new global::Universe.RemoveStaticEntity();
          }
          RemoveStaticEntity.MergeFrom(other.RemoveStaticEntity);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Universe.AddStaticEntity subBuilder = new global::Universe.AddStaticEntity();
            if (actionCase_ == ActionOneofCase.AddStaticEntity) {
              subBuilder.MergeFrom(AddStaticEntity);
            }
            input.ReadMessage(subBuilder);
            AddStaticEntity = subBuilder;
            break;
          }
          case 18: {
            global::Universe.UpdateStaticEntity subBuilder = new global::Universe.UpdateStaticEntity();
            if (actionCase_ == ActionOneofCase.UpdateStaticEntity) {
              subBuilder.MergeFrom(UpdateStaticEntity);
            }
            input.ReadMessage(subBuilder);
            UpdateStaticEntity = subBuilder;
            break;
          }
          case 26: {
            global::Universe.RemoveStaticEntity subBuilder = new global::Universe.RemoveStaticEntity();
            if (actionCase_ == ActionOneofCase.RemoveStaticEntity) {
              subBuilder.MergeFrom(RemoveStaticEntity);
            }
            input.ReadMessage(subBuilder);
            RemoveStaticEntity = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Universe.AddStaticEntity subBuilder = new global::Universe.AddStaticEntity();
            if (actionCase_ == ActionOneofCase.AddStaticEntity) {
              subBuilder.MergeFrom(AddStaticEntity);
            }
            input.ReadMessage(subBuilder);
            AddStaticEntity = subBuilder;
            break;
          }
          case 18: {
            global::Universe.UpdateStaticEntity subBuilder = new global::Universe.UpdateStaticEntity();
            if (actionCase_ == ActionOneofCase.UpdateStaticEntity) {
              subBuilder.MergeFrom(UpdateStaticEntity);
            }
            input.ReadMessage(subBuilder);
            UpdateStaticEntity = subBuilder;
            break;
          }
          case 26: {
            global::Universe.RemoveStaticEntity subBuilder = new global::Universe.RemoveStaticEntity();
            if (actionCase_ == ActionOneofCase.RemoveStaticEntity) {
              subBuilder.MergeFrom(RemoveStaticEntity);
            }
            input.ReadMessage(subBuilder);
            RemoveStaticEntity = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemoveStaticEntity : pb::IMessage<RemoveStaticEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveStaticEntity> _parser = new pb::MessageParser<RemoveStaticEntity>(() => new RemoveStaticEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveStaticEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveStaticEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveStaticEntity(RemoveStaticEntity other) : this() {
      entityUuid_ = other.entityUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveStaticEntity Clone() {
      return new RemoveStaticEntity(this);
    }

    /// <summary>Field number for the "entityUuid" field.</summary>
    public const int EntityUuidFieldNumber = 1;
    private string entityUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityUuid {
      get { return entityUuid_; }
      set {
        entityUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveStaticEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveStaticEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityUuid != other.EntityUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityUuid.Length != 0) hash ^= EntityUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntityUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntityUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveStaticEntity other) {
      if (other == null) {
        return;
      }
      if (other.EntityUuid.Length != 0) {
        EntityUuid = other.EntityUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntityUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EntityUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InteractWithStaticEntity : pb::IMessage<InteractWithStaticEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InteractWithStaticEntity> _parser = new pb::MessageParser<InteractWithStaticEntity>(() => new InteractWithStaticEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InteractWithStaticEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractWithStaticEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractWithStaticEntity(InteractWithStaticEntity other) : this() {
      staticEntityUuid_ = other.staticEntityUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractWithStaticEntity Clone() {
      return new InteractWithStaticEntity(this);
    }

    /// <summary>Field number for the "staticEntityUuid" field.</summary>
    public const int StaticEntityUuidFieldNumber = 1;
    private string staticEntityUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StaticEntityUuid {
      get { return staticEntityUuid_; }
      set {
        staticEntityUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InteractWithStaticEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InteractWithStaticEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StaticEntityUuid != other.StaticEntityUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StaticEntityUuid.Length != 0) hash ^= StaticEntityUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StaticEntityUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StaticEntityUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StaticEntityUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StaticEntityUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StaticEntityUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StaticEntityUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InteractWithStaticEntity other) {
      if (other == null) {
        return;
      }
      if (other.StaticEntityUuid.Length != 0) {
        StaticEntityUuid = other.StaticEntityUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StaticEntityUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StaticEntityUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlaceStaticEntity : pb::IMessage<PlaceStaticEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlaceStaticEntity> _parser = new pb::MessageParser<PlaceStaticEntity>(() => new PlaceStaticEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceStaticEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceStaticEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceStaticEntity(PlaceStaticEntity other) : this() {
      staticEntityUuid_ = other.staticEntityUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceStaticEntity Clone() {
      return new PlaceStaticEntity(this);
    }

    /// <summary>Field number for the "staticEntityUuid" field.</summary>
    public const int StaticEntityUuidFieldNumber = 1;
    private string staticEntityUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StaticEntityUuid {
      get { return staticEntityUuid_; }
      set {
        staticEntityUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceStaticEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceStaticEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StaticEntityUuid != other.StaticEntityUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StaticEntityUuid.Length != 0) hash ^= StaticEntityUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StaticEntityUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StaticEntityUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StaticEntityUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StaticEntityUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StaticEntityUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StaticEntityUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceStaticEntity other) {
      if (other == null) {
        return;
      }
      if (other.StaticEntityUuid.Length != 0) {
        StaticEntityUuid = other.StaticEntityUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StaticEntityUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StaticEntityUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddStaticEntity : pb::IMessage<AddStaticEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddStaticEntity> _parser = new pb::MessageParser<AddStaticEntity>(() => new AddStaticEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddStaticEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddStaticEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddStaticEntity(AddStaticEntity other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddStaticEntity Clone() {
      return new AddStaticEntity(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Universe.StaticEntity entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.StaticEntity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddStaticEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddStaticEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddStaticEntity other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::Universe.StaticEntity();
        }
        Entity.MergeFrom(other.Entity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Universe.StaticEntity();
            }
            input.ReadMessage(Entity);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Universe.StaticEntity();
            }
            input.ReadMessage(Entity);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateStaticEntity : pb::IMessage<UpdateStaticEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStaticEntity> _parser = new pb::MessageParser<UpdateStaticEntity>(() => new UpdateStaticEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateStaticEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStaticEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStaticEntity(UpdateStaticEntity other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStaticEntity Clone() {
      return new UpdateStaticEntity(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Universe.StaticEntity entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.StaticEntity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateStaticEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateStaticEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateStaticEntity other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::Universe.StaticEntity();
        }
        Entity.MergeFrom(other.Entity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Universe.StaticEntity();
            }
            input.ReadMessage(Entity);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Universe.StaticEntity();
            }
            input.ReadMessage(Entity);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreatePlayerRequest : pb::IMessage<CreatePlayerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatePlayerRequest> _parser = new pb::MessageParser<CreatePlayerRequest>(() => new CreatePlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRequest(CreatePlayerRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRequest Clone() {
      return new CreatePlayerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreatePlayerResponse : pb::IMessage<CreatePlayerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatePlayerResponse> _parser = new pb::MessageParser<CreatePlayerResponse>(() => new CreatePlayerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerResponse(CreatePlayerResponse other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      world_ = other.world_ != null ? other.world_.Clone() : null;
      chunks_ = other.chunks_.Clone();
      dynamicEntity_ = other.dynamicEntity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerResponse Clone() {
      return new CreatePlayerResponse(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Universe.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "world" field.</summary>
    public const int WorldFieldNumber = 2;
    private global::Universe.World world_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.World World {
      get { return world_; }
      set {
        world_ = value;
      }
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Universe.Chunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(26, global::Universe.Chunk.Parser);
    private readonly pbc::RepeatedField<global::Universe.Chunk> chunks_ = new pbc::RepeatedField<global::Universe.Chunk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Chunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Universe.DynamicEntity> _repeated_dynamicEntity_codec
        = pb::FieldCodec.ForMessage(34, global::Universe.DynamicEntity.Parser);
    private readonly pbc::RepeatedField<global::Universe.DynamicEntity> dynamicEntity_ = new pbc::RepeatedField<global::Universe.DynamicEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.DynamicEntity> DynamicEntity {
      get { return dynamicEntity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (!object.Equals(World, other.World)) return false;
      if(!chunks_.Equals(other.chunks_)) return false;
      if(!dynamicEntity_.Equals(other.dynamicEntity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (world_ != null) hash ^= World.GetHashCode();
      hash ^= chunks_.GetHashCode();
      hash ^= dynamicEntity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      chunks_.WriteTo(output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(ref output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (world_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(World);
      }
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      size += dynamicEntity_.CalculateSize(_repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Universe.Player();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.world_ != null) {
        if (world_ == null) {
          World = new global::Universe.World();
        }
        World.MergeFrom(other.World);
      }
      chunks_.Add(other.chunks_);
      dynamicEntity_.Add(other.dynamicEntity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Universe.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Universe.World();
            }
            input.ReadMessage(World);
            break;
          }
          case 26: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 34: {
            dynamicEntity_.AddEntriesFrom(input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Universe.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Universe.World();
            }
            input.ReadMessage(World);
            break;
          }
          case 26: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 34: {
            dynamicEntity_.AddEntriesFrom(ref input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetPlayersReply : pb::IMessage<GetPlayersReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPlayersReply> _parser = new pb::MessageParser<GetPlayersReply>(() => new GetPlayersReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayersReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayersReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayersReply(GetPlayersReply other) : this() {
      player_ = other.player_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayersReply Clone() {
      return new GetPlayersReply(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Universe.Player> _repeated_player_codec
        = pb::FieldCodec.ForMessage(10, global::Universe.Player.Parser);
    private readonly pbc::RepeatedField<global::Universe.Player> player_ = new pbc::RepeatedField<global::Universe.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Player> Player {
      get { return player_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayersReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayersReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!player_.Equals(other.player_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= player_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      player_.WriteTo(output, _repeated_player_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      player_.WriteTo(ref output, _repeated_player_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += player_.CalculateSize(_repeated_player_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayersReply other) {
      if (other == null) {
        return;
      }
      player_.Add(other.player_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            player_.AddEntriesFrom(input, _repeated_player_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            player_.AddEntriesFrom(ref input, _repeated_player_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerStreamRequest : pb::IMessage<PlayerStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStreamRequest> _parser = new pb::MessageParser<PlayerStreamRequest>(() => new PlayerStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStreamRequest(PlayerStreamRequest other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.Move:
          Move = other.Move.Clone();
          break;
        case ActionOneofCase.Attack:
          Attack = other.Attack.Clone();
          break;
        case ActionOneofCase.Interact:
          Interact = other.Interact.Clone();
          break;
        case ActionOneofCase.Skill:
          Skill = other.Skill.Clone();
          break;
        case ActionOneofCase.Hit:
          Hit = other.Hit.Clone();
          break;
        case ActionOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStreamRequest Clone() {
      return new PlayerStreamRequest(this);
    }

    /// <summary>Field number for the "move" field.</summary>
    public const int MoveFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Move Move {
      get { return actionCase_ == ActionOneofCase.Move ? (global::Universe.Move) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Move;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Attack Attack {
      get { return actionCase_ == ActionOneofCase.Attack ? (global::Universe.Attack) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Attack;
      }
    }

    /// <summary>Field number for the "interact" field.</summary>
    public const int InteractFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Interact Interact {
      get { return actionCase_ == ActionOneofCase.Interact ? (global::Universe.Interact) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Interact;
      }
    }

    /// <summary>Field number for the "skill" field.</summary>
    public const int SkillFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.UseSkill Skill {
      get { return actionCase_ == ActionOneofCase.Skill ? (global::Universe.UseSkill) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Skill;
      }
    }

    /// <summary>Field number for the "hit" field.</summary>
    public const int HitFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Hit Hit {
      get { return actionCase_ == ActionOneofCase.Hit ? (global::Universe.Hit) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Hit;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.PlayerDisconnect Disconnect {
      get { return actionCase_ == ActionOneofCase.Disconnect ? (global::Universe.PlayerDisconnect) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Disconnect;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      Move = 1,
      Attack = 2,
      Interact = 3,
      Skill = 4,
      Hit = 5,
      Disconnect = 6,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Move, other.Move)) return false;
      if (!object.Equals(Attack, other.Attack)) return false;
      if (!object.Equals(Interact, other.Interact)) return false;
      if (!object.Equals(Skill, other.Skill)) return false;
      if (!object.Equals(Hit, other.Hit)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.Move) hash ^= Move.GetHashCode();
      if (actionCase_ == ActionOneofCase.Attack) hash ^= Attack.GetHashCode();
      if (actionCase_ == ActionOneofCase.Interact) hash ^= Interact.GetHashCode();
      if (actionCase_ == ActionOneofCase.Skill) hash ^= Skill.GetHashCode();
      if (actionCase_ == ActionOneofCase.Hit) hash ^= Hit.GetHashCode();
      if (actionCase_ == ActionOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.Move) {
        output.WriteRawTag(10);
        output.WriteMessage(Move);
      }
      if (actionCase_ == ActionOneofCase.Attack) {
        output.WriteRawTag(18);
        output.WriteMessage(Attack);
      }
      if (actionCase_ == ActionOneofCase.Interact) {
        output.WriteRawTag(26);
        output.WriteMessage(Interact);
      }
      if (actionCase_ == ActionOneofCase.Skill) {
        output.WriteRawTag(34);
        output.WriteMessage(Skill);
      }
      if (actionCase_ == ActionOneofCase.Hit) {
        output.WriteRawTag(42);
        output.WriteMessage(Hit);
      }
      if (actionCase_ == ActionOneofCase.Disconnect) {
        output.WriteRawTag(50);
        output.WriteMessage(Disconnect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.Move) {
        output.WriteRawTag(10);
        output.WriteMessage(Move);
      }
      if (actionCase_ == ActionOneofCase.Attack) {
        output.WriteRawTag(18);
        output.WriteMessage(Attack);
      }
      if (actionCase_ == ActionOneofCase.Interact) {
        output.WriteRawTag(26);
        output.WriteMessage(Interact);
      }
      if (actionCase_ == ActionOneofCase.Skill) {
        output.WriteRawTag(34);
        output.WriteMessage(Skill);
      }
      if (actionCase_ == ActionOneofCase.Hit) {
        output.WriteRawTag(42);
        output.WriteMessage(Hit);
      }
      if (actionCase_ == ActionOneofCase.Disconnect) {
        output.WriteRawTag(50);
        output.WriteMessage(Disconnect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.Move) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Move);
      }
      if (actionCase_ == ActionOneofCase.Attack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attack);
      }
      if (actionCase_ == ActionOneofCase.Interact) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interact);
      }
      if (actionCase_ == ActionOneofCase.Skill) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill);
      }
      if (actionCase_ == ActionOneofCase.Hit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hit);
      }
      if (actionCase_ == ActionOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStreamRequest other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.Move:
          if (Move == null) {
            Move = new global::Universe.Move();
          }
          Move.MergeFrom(other.Move);
          break;
        case ActionOneofCase.Attack:
          if (Attack == null) {
            Attack = new global::Universe.Attack();
          }
          Attack.MergeFrom(other.Attack);
          break;
        case ActionOneofCase.Interact:
          if (Interact == null) {
            Interact = new global::Universe.Interact();
          }
          Interact.MergeFrom(other.Interact);
          break;
        case ActionOneofCase.Skill:
          if (Skill == null) {
            Skill = new global::Universe.UseSkill();
          }
          Skill.MergeFrom(other.Skill);
          break;
        case ActionOneofCase.Hit:
          if (Hit == null) {
            Hit = new global::Universe.Hit();
          }
          Hit.MergeFrom(other.Hit);
          break;
        case ActionOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::Universe.PlayerDisconnect();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Universe.Move subBuilder = new global::Universe.Move();
            if (actionCase_ == ActionOneofCase.Move) {
              subBuilder.MergeFrom(Move);
            }
            input.ReadMessage(subBuilder);
            Move = subBuilder;
            break;
          }
          case 18: {
            global::Universe.Attack subBuilder = new global::Universe.Attack();
            if (actionCase_ == ActionOneofCase.Attack) {
              subBuilder.MergeFrom(Attack);
            }
            input.ReadMessage(subBuilder);
            Attack = subBuilder;
            break;
          }
          case 26: {
            global::Universe.Interact subBuilder = new global::Universe.Interact();
            if (actionCase_ == ActionOneofCase.Interact) {
              subBuilder.MergeFrom(Interact);
            }
            input.ReadMessage(subBuilder);
            Interact = subBuilder;
            break;
          }
          case 34: {
            global::Universe.UseSkill subBuilder = new global::Universe.UseSkill();
            if (actionCase_ == ActionOneofCase.Skill) {
              subBuilder.MergeFrom(Skill);
            }
            input.ReadMessage(subBuilder);
            Skill = subBuilder;
            break;
          }
          case 42: {
            global::Universe.Hit subBuilder = new global::Universe.Hit();
            if (actionCase_ == ActionOneofCase.Hit) {
              subBuilder.MergeFrom(Hit);
            }
            input.ReadMessage(subBuilder);
            Hit = subBuilder;
            break;
          }
          case 50: {
            global::Universe.PlayerDisconnect subBuilder = new global::Universe.PlayerDisconnect();
            if (actionCase_ == ActionOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Universe.Move subBuilder = new global::Universe.Move();
            if (actionCase_ == ActionOneofCase.Move) {
              subBuilder.MergeFrom(Move);
            }
            input.ReadMessage(subBuilder);
            Move = subBuilder;
            break;
          }
          case 18: {
            global::Universe.Attack subBuilder = new global::Universe.Attack();
            if (actionCase_ == ActionOneofCase.Attack) {
              subBuilder.MergeFrom(Attack);
            }
            input.ReadMessage(subBuilder);
            Attack = subBuilder;
            break;
          }
          case 26: {
            global::Universe.Interact subBuilder = new global::Universe.Interact();
            if (actionCase_ == ActionOneofCase.Interact) {
              subBuilder.MergeFrom(Interact);
            }
            input.ReadMessage(subBuilder);
            Interact = subBuilder;
            break;
          }
          case 34: {
            global::Universe.UseSkill subBuilder = new global::Universe.UseSkill();
            if (actionCase_ == ActionOneofCase.Skill) {
              subBuilder.MergeFrom(Skill);
            }
            input.ReadMessage(subBuilder);
            Skill = subBuilder;
            break;
          }
          case 42: {
            global::Universe.Hit subBuilder = new global::Universe.Hit();
            if (actionCase_ == ActionOneofCase.Hit) {
              subBuilder.MergeFrom(Hit);
            }
            input.ReadMessage(subBuilder);
            Hit = subBuilder;
            break;
          }
          case 50: {
            global::Universe.PlayerDisconnect subBuilder = new global::Universe.PlayerDisconnect();
            if (actionCase_ == ActionOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerStreamResponse : pb::IMessage<PlayerStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStreamResponse> _parser = new pb::MessageParser<PlayerStreamResponse>(() => new PlayerStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStreamResponse(PlayerStreamResponse other) : this() {
      uuid_ = other.uuid_;
      switch (other.InfoCase) {
        case InfoOneofCase.DynamicEntity:
          DynamicEntity = other.DynamicEntity;
          break;
        case InfoOneofCase.StaticEntity:
          StaticEntity = other.StaticEntity;
          break;
      }

      switch (other.ActionCase) {
        case ActionOneofCase.Move:
          Move = other.Move.Clone();
          break;
        case ActionOneofCase.AddEntity:
          AddEntity = other.AddEntity.Clone();
          break;
        case ActionOneofCase.DeleteEntity:
          DeleteEntity = other.DeleteEntity;
          break;
        case ActionOneofCase.Hit:
          Hit = other.Hit.Clone();
          break;
        case ActionOneofCase.Attack:
          Attack = other.Attack.Clone();
          break;
        case ActionOneofCase.Skill:
          Skill = other.Skill.Clone();
          break;
        case ActionOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case ActionOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case ActionOneofCase.Interact:
          Interact = other.Interact.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStreamResponse Clone() {
      return new PlayerStreamResponse(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.DynamicEntityType DynamicEntity {
      get { return infoCase_ == InfoOneofCase.DynamicEntity ? (global::Universe.DynamicEntityType) info_ : global::Universe.DynamicEntityType.Player; }
      set {
        info_ = value;
        infoCase_ = InfoOneofCase.DynamicEntity;
      }
    }

    /// <summary>Field number for the "staticEntity" field.</summary>
    public const int StaticEntityFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.StaticEntityType StaticEntity {
      get { return infoCase_ == InfoOneofCase.StaticEntity ? (global::Universe.StaticEntityType) info_ : global::Universe.StaticEntityType.Empty; }
      set {
        info_ = value;
        infoCase_ = InfoOneofCase.StaticEntity;
      }
    }

    /// <summary>Field number for the "move" field.</summary>
    public const int MoveFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Move Move {
      get { return actionCase_ == ActionOneofCase.Move ? (global::Universe.Move) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Move;
      }
    }

    /// <summary>Field number for the "addEntity" field.</summary>
    public const int AddEntityFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.DynamicEntity AddEntity {
      get { return actionCase_ == ActionOneofCase.AddEntity ? (global::Universe.DynamicEntity) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.AddEntity;
      }
    }

    /// <summary>Field number for the "deleteEntity" field.</summary>
    public const int DeleteEntityFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteEntity {
      get { return actionCase_ == ActionOneofCase.DeleteEntity ? (bool) action_ : false; }
      set {
        action_ = value;
        actionCase_ = ActionOneofCase.DeleteEntity;
      }
    }

    /// <summary>Field number for the "hit" field.</summary>
    public const int HitFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Hit Hit {
      get { return actionCase_ == ActionOneofCase.Hit ? (global::Universe.Hit) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Hit;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Attack Attack {
      get { return actionCase_ == ActionOneofCase.Attack ? (global::Universe.Attack) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Attack;
      }
    }

    /// <summary>Field number for the "skill" field.</summary>
    public const int SkillFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.UseSkill Skill {
      get { return actionCase_ == ActionOneofCase.Skill ? (global::Universe.UseSkill) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Skill;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.PlayerDisconnect Disconnect {
      get { return actionCase_ == ActionOneofCase.Disconnect ? (global::Universe.PlayerDisconnect) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.PlayerConnect Connect {
      get { return actionCase_ == ActionOneofCase.Connect ? (global::Universe.PlayerConnect) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "interact" field.</summary>
    public const int InteractFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Interact Interact {
      get { return actionCase_ == ActionOneofCase.Interact ? (global::Universe.Interact) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Interact;
      }
    }

    private object info_;
    /// <summary>Enum of possible cases for the "info" oneof.</summary>
    public enum InfoOneofCase {
      None = 0,
      DynamicEntity = 2,
      StaticEntity = 3,
    }
    private InfoOneofCase infoCase_ = InfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoOneofCase InfoCase {
      get { return infoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfo() {
      infoCase_ = InfoOneofCase.None;
      info_ = null;
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      Move = 4,
      AddEntity = 5,
      DeleteEntity = 6,
      Hit = 7,
      Attack = 8,
      Skill = 9,
      Disconnect = 10,
      Connect = 11,
      Interact = 12,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (DynamicEntity != other.DynamicEntity) return false;
      if (StaticEntity != other.StaticEntity) return false;
      if (!object.Equals(Move, other.Move)) return false;
      if (!object.Equals(AddEntity, other.AddEntity)) return false;
      if (DeleteEntity != other.DeleteEntity) return false;
      if (!object.Equals(Hit, other.Hit)) return false;
      if (!object.Equals(Attack, other.Attack)) return false;
      if (!object.Equals(Skill, other.Skill)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Interact, other.Interact)) return false;
      if (InfoCase != other.InfoCase) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (infoCase_ == InfoOneofCase.DynamicEntity) hash ^= DynamicEntity.GetHashCode();
      if (infoCase_ == InfoOneofCase.StaticEntity) hash ^= StaticEntity.GetHashCode();
      if (actionCase_ == ActionOneofCase.Move) hash ^= Move.GetHashCode();
      if (actionCase_ == ActionOneofCase.AddEntity) hash ^= AddEntity.GetHashCode();
      if (actionCase_ == ActionOneofCase.DeleteEntity) hash ^= DeleteEntity.GetHashCode();
      if (actionCase_ == ActionOneofCase.Hit) hash ^= Hit.GetHashCode();
      if (actionCase_ == ActionOneofCase.Attack) hash ^= Attack.GetHashCode();
      if (actionCase_ == ActionOneofCase.Skill) hash ^= Skill.GetHashCode();
      if (actionCase_ == ActionOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (actionCase_ == ActionOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (actionCase_ == ActionOneofCase.Interact) hash ^= Interact.GetHashCode();
      hash ^= (int) infoCase_;
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (infoCase_ == InfoOneofCase.DynamicEntity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DynamicEntity);
      }
      if (infoCase_ == InfoOneofCase.StaticEntity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) StaticEntity);
      }
      if (actionCase_ == ActionOneofCase.Move) {
        output.WriteRawTag(34);
        output.WriteMessage(Move);
      }
      if (actionCase_ == ActionOneofCase.AddEntity) {
        output.WriteRawTag(42);
        output.WriteMessage(AddEntity);
      }
      if (actionCase_ == ActionOneofCase.DeleteEntity) {
        output.WriteRawTag(48);
        output.WriteBool(DeleteEntity);
      }
      if (actionCase_ == ActionOneofCase.Hit) {
        output.WriteRawTag(58);
        output.WriteMessage(Hit);
      }
      if (actionCase_ == ActionOneofCase.Attack) {
        output.WriteRawTag(66);
        output.WriteMessage(Attack);
      }
      if (actionCase_ == ActionOneofCase.Skill) {
        output.WriteRawTag(74);
        output.WriteMessage(Skill);
      }
      if (actionCase_ == ActionOneofCase.Disconnect) {
        output.WriteRawTag(82);
        output.WriteMessage(Disconnect);
      }
      if (actionCase_ == ActionOneofCase.Connect) {
        output.WriteRawTag(90);
        output.WriteMessage(Connect);
      }
      if (actionCase_ == ActionOneofCase.Interact) {
        output.WriteRawTag(98);
        output.WriteMessage(Interact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (infoCase_ == InfoOneofCase.DynamicEntity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DynamicEntity);
      }
      if (infoCase_ == InfoOneofCase.StaticEntity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) StaticEntity);
      }
      if (actionCase_ == ActionOneofCase.Move) {
        output.WriteRawTag(34);
        output.WriteMessage(Move);
      }
      if (actionCase_ == ActionOneofCase.AddEntity) {
        output.WriteRawTag(42);
        output.WriteMessage(AddEntity);
      }
      if (actionCase_ == ActionOneofCase.DeleteEntity) {
        output.WriteRawTag(48);
        output.WriteBool(DeleteEntity);
      }
      if (actionCase_ == ActionOneofCase.Hit) {
        output.WriteRawTag(58);
        output.WriteMessage(Hit);
      }
      if (actionCase_ == ActionOneofCase.Attack) {
        output.WriteRawTag(66);
        output.WriteMessage(Attack);
      }
      if (actionCase_ == ActionOneofCase.Skill) {
        output.WriteRawTag(74);
        output.WriteMessage(Skill);
      }
      if (actionCase_ == ActionOneofCase.Disconnect) {
        output.WriteRawTag(82);
        output.WriteMessage(Disconnect);
      }
      if (actionCase_ == ActionOneofCase.Connect) {
        output.WriteRawTag(90);
        output.WriteMessage(Connect);
      }
      if (actionCase_ == ActionOneofCase.Interact) {
        output.WriteRawTag(98);
        output.WriteMessage(Interact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (infoCase_ == InfoOneofCase.DynamicEntity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DynamicEntity);
      }
      if (infoCase_ == InfoOneofCase.StaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StaticEntity);
      }
      if (actionCase_ == ActionOneofCase.Move) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Move);
      }
      if (actionCase_ == ActionOneofCase.AddEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddEntity);
      }
      if (actionCase_ == ActionOneofCase.DeleteEntity) {
        size += 1 + 1;
      }
      if (actionCase_ == ActionOneofCase.Hit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hit);
      }
      if (actionCase_ == ActionOneofCase.Attack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attack);
      }
      if (actionCase_ == ActionOneofCase.Skill) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill);
      }
      if (actionCase_ == ActionOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (actionCase_ == ActionOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (actionCase_ == ActionOneofCase.Interact) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      switch (other.InfoCase) {
        case InfoOneofCase.DynamicEntity:
          DynamicEntity = other.DynamicEntity;
          break;
        case InfoOneofCase.StaticEntity:
          StaticEntity = other.StaticEntity;
          break;
      }

      switch (other.ActionCase) {
        case ActionOneofCase.Move:
          if (Move == null) {
            Move = new global::Universe.Move();
          }
          Move.MergeFrom(other.Move);
          break;
        case ActionOneofCase.AddEntity:
          if (AddEntity == null) {
            AddEntity = new global::Universe.DynamicEntity();
          }
          AddEntity.MergeFrom(other.AddEntity);
          break;
        case ActionOneofCase.DeleteEntity:
          DeleteEntity = other.DeleteEntity;
          break;
        case ActionOneofCase.Hit:
          if (Hit == null) {
            Hit = new global::Universe.Hit();
          }
          Hit.MergeFrom(other.Hit);
          break;
        case ActionOneofCase.Attack:
          if (Attack == null) {
            Attack = new global::Universe.Attack();
          }
          Attack.MergeFrom(other.Attack);
          break;
        case ActionOneofCase.Skill:
          if (Skill == null) {
            Skill = new global::Universe.UseSkill();
          }
          Skill.MergeFrom(other.Skill);
          break;
        case ActionOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::Universe.PlayerDisconnect();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case ActionOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::Universe.PlayerConnect();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case ActionOneofCase.Interact:
          if (Interact == null) {
            Interact = new global::Universe.Interact();
          }
          Interact.MergeFrom(other.Interact);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.DynamicEntity;
            break;
          }
          case 24: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.StaticEntity;
            break;
          }
          case 34: {
            global::Universe.Move subBuilder = new global::Universe.Move();
            if (actionCase_ == ActionOneofCase.Move) {
              subBuilder.MergeFrom(Move);
            }
            input.ReadMessage(subBuilder);
            Move = subBuilder;
            break;
          }
          case 42: {
            global::Universe.DynamicEntity subBuilder = new global::Universe.DynamicEntity();
            if (actionCase_ == ActionOneofCase.AddEntity) {
              subBuilder.MergeFrom(AddEntity);
            }
            input.ReadMessage(subBuilder);
            AddEntity = subBuilder;
            break;
          }
          case 48: {
            DeleteEntity = input.ReadBool();
            break;
          }
          case 58: {
            global::Universe.Hit subBuilder = new global::Universe.Hit();
            if (actionCase_ == ActionOneofCase.Hit) {
              subBuilder.MergeFrom(Hit);
            }
            input.ReadMessage(subBuilder);
            Hit = subBuilder;
            break;
          }
          case 66: {
            global::Universe.Attack subBuilder = new global::Universe.Attack();
            if (actionCase_ == ActionOneofCase.Attack) {
              subBuilder.MergeFrom(Attack);
            }
            input.ReadMessage(subBuilder);
            Attack = subBuilder;
            break;
          }
          case 74: {
            global::Universe.UseSkill subBuilder = new global::Universe.UseSkill();
            if (actionCase_ == ActionOneofCase.Skill) {
              subBuilder.MergeFrom(Skill);
            }
            input.ReadMessage(subBuilder);
            Skill = subBuilder;
            break;
          }
          case 82: {
            global::Universe.PlayerDisconnect subBuilder = new global::Universe.PlayerDisconnect();
            if (actionCase_ == ActionOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 90: {
            global::Universe.PlayerConnect subBuilder = new global::Universe.PlayerConnect();
            if (actionCase_ == ActionOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 98: {
            global::Universe.Interact subBuilder = new global::Universe.Interact();
            if (actionCase_ == ActionOneofCase.Interact) {
              subBuilder.MergeFrom(Interact);
            }
            input.ReadMessage(subBuilder);
            Interact = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.DynamicEntity;
            break;
          }
          case 24: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.StaticEntity;
            break;
          }
          case 34: {
            global::Universe.Move subBuilder = new global::Universe.Move();
            if (actionCase_ == ActionOneofCase.Move) {
              subBuilder.MergeFrom(Move);
            }
            input.ReadMessage(subBuilder);
            Move = subBuilder;
            break;
          }
          case 42: {
            global::Universe.DynamicEntity subBuilder = new global::Universe.DynamicEntity();
            if (actionCase_ == ActionOneofCase.AddEntity) {
              subBuilder.MergeFrom(AddEntity);
            }
            input.ReadMessage(subBuilder);
            AddEntity = subBuilder;
            break;
          }
          case 48: {
            DeleteEntity = input.ReadBool();
            break;
          }
          case 58: {
            global::Universe.Hit subBuilder = new global::Universe.Hit();
            if (actionCase_ == ActionOneofCase.Hit) {
              subBuilder.MergeFrom(Hit);
            }
            input.ReadMessage(subBuilder);
            Hit = subBuilder;
            break;
          }
          case 66: {
            global::Universe.Attack subBuilder = new global::Universe.Attack();
            if (actionCase_ == ActionOneofCase.Attack) {
              subBuilder.MergeFrom(Attack);
            }
            input.ReadMessage(subBuilder);
            Attack = subBuilder;
            break;
          }
          case 74: {
            global::Universe.UseSkill subBuilder = new global::Universe.UseSkill();
            if (actionCase_ == ActionOneofCase.Skill) {
              subBuilder.MergeFrom(Skill);
            }
            input.ReadMessage(subBuilder);
            Skill = subBuilder;
            break;
          }
          case 82: {
            global::Universe.PlayerDisconnect subBuilder = new global::Universe.PlayerDisconnect();
            if (actionCase_ == ActionOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 90: {
            global::Universe.PlayerConnect subBuilder = new global::Universe.PlayerConnect();
            if (actionCase_ == ActionOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 98: {
            global::Universe.Interact subBuilder = new global::Universe.Interact();
            if (actionCase_ == ActionOneofCase.Interact) {
              subBuilder.MergeFrom(Interact);
            }
            input.ReadMessage(subBuilder);
            Interact = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerDisconnect : pb::IMessage<PlayerDisconnect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerDisconnect> _parser = new pb::MessageParser<PlayerDisconnect>(() => new PlayerDisconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerDisconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDisconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDisconnect(PlayerDisconnect other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDisconnect Clone() {
      return new PlayerDisconnect(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerDisconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerDisconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerDisconnect other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerConnect : pb::IMessage<PlayerConnect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerConnect> _parser = new pb::MessageParser<PlayerConnect>(() => new PlayerConnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerConnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerConnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerConnect(PlayerConnect other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerConnect Clone() {
      return new PlayerConnect(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Universe.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerConnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerConnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerConnect other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Universe.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Universe.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Universe.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hit : pb::IMessage<Hit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hit> _parser = new pb::MessageParser<Hit>(() => new Hit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hit(Hit other) : this() {
      damage_ = other.damage_;
      hpLeft_ = other.hpLeft_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      dynamicEntityUUID_ = other.dynamicEntityUUID_.Clone();
      staticEntityUUID_ = other.staticEntityUUID_.Clone();
      skillId_ = other.skillId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hit Clone() {
      return new Hit(this);
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 1;
    private long damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "hpLeft" field.</summary>
    public const int HpLeftFieldNumber = 2;
    private long hpLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HpLeft {
      get { return hpLeft_; }
      set {
        hpLeft_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Universe.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "dynamicEntityUUID" field.</summary>
    public const int DynamicEntityUUIDFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_dynamicEntityUUID_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> dynamicEntityUUID_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DynamicEntityUUID {
      get { return dynamicEntityUUID_; }
    }

    /// <summary>Field number for the "staticEntityUUID" field.</summary>
    public const int StaticEntityUUIDFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_staticEntityUUID_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> staticEntityUUID_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StaticEntityUUID {
      get { return staticEntityUUID_; }
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 6;
    private string skillId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillId {
      get { return skillId_; }
      set {
        skillId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Damage != other.Damage) return false;
      if (HpLeft != other.HpLeft) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if(!dynamicEntityUUID_.Equals(other.dynamicEntityUUID_)) return false;
      if(!staticEntityUUID_.Equals(other.staticEntityUUID_)) return false;
      if (SkillId != other.SkillId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Damage != 0L) hash ^= Damage.GetHashCode();
      if (HpLeft != 0L) hash ^= HpLeft.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      hash ^= dynamicEntityUUID_.GetHashCode();
      hash ^= staticEntityUUID_.GetHashCode();
      if (SkillId.Length != 0) hash ^= SkillId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Damage != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Damage);
      }
      if (HpLeft != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HpLeft);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      dynamicEntityUUID_.WriteTo(output, _repeated_dynamicEntityUUID_codec);
      staticEntityUUID_.WriteTo(output, _repeated_staticEntityUUID_codec);
      if (SkillId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SkillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Damage != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Damage);
      }
      if (HpLeft != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HpLeft);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      dynamicEntityUUID_.WriteTo(ref output, _repeated_dynamicEntityUUID_codec);
      staticEntityUUID_.WriteTo(ref output, _repeated_staticEntityUUID_codec);
      if (SkillId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SkillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Damage != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Damage);
      }
      if (HpLeft != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HpLeft);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      size += dynamicEntityUUID_.CalculateSize(_repeated_dynamicEntityUUID_codec);
      size += staticEntityUUID_.CalculateSize(_repeated_staticEntityUUID_codec);
      if (SkillId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hit other) {
      if (other == null) {
        return;
      }
      if (other.Damage != 0L) {
        Damage = other.Damage;
      }
      if (other.HpLeft != 0L) {
        HpLeft = other.HpLeft;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      dynamicEntityUUID_.Add(other.dynamicEntityUUID_);
      staticEntityUUID_.Add(other.staticEntityUUID_);
      if (other.SkillId.Length != 0) {
        SkillId = other.SkillId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Damage = input.ReadInt64();
            break;
          }
          case 16: {
            HpLeft = input.ReadInt64();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Universe.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            dynamicEntityUUID_.AddEntriesFrom(input, _repeated_dynamicEntityUUID_codec);
            break;
          }
          case 42: {
            staticEntityUUID_.AddEntriesFrom(input, _repeated_staticEntityUUID_codec);
            break;
          }
          case 50: {
            SkillId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Damage = input.ReadInt64();
            break;
          }
          case 16: {
            HpLeft = input.ReadInt64();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Universe.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            dynamicEntityUUID_.AddEntriesFrom(ref input, _repeated_dynamicEntityUUID_codec);
            break;
          }
          case 42: {
            staticEntityUUID_.AddEntriesFrom(ref input, _repeated_staticEntityUUID_codec);
            break;
          }
          case 50: {
            SkillId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Interact : pb::IMessage<Interact>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Interact> _parser = new pb::MessageParser<Interact>(() => new Interact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Interact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interact(Interact other) : this() {
      uuid_ = other.uuid_;
      switch (other.InfoCase) {
        case InfoOneofCase.DynamicEntity:
          DynamicEntity = other.DynamicEntity;
          break;
        case InfoOneofCase.StaticEntity:
          StaticEntity = other.StaticEntity;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interact Clone() {
      return new Interact(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.DynamicEntityType DynamicEntity {
      get { return infoCase_ == InfoOneofCase.DynamicEntity ? (global::Universe.DynamicEntityType) info_ : global::Universe.DynamicEntityType.Player; }
      set {
        info_ = value;
        infoCase_ = InfoOneofCase.DynamicEntity;
      }
    }

    /// <summary>Field number for the "staticEntity" field.</summary>
    public const int StaticEntityFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.StaticEntityType StaticEntity {
      get { return infoCase_ == InfoOneofCase.StaticEntity ? (global::Universe.StaticEntityType) info_ : global::Universe.StaticEntityType.Empty; }
      set {
        info_ = value;
        infoCase_ = InfoOneofCase.StaticEntity;
      }
    }

    private object info_;
    /// <summary>Enum of possible cases for the "info" oneof.</summary>
    public enum InfoOneofCase {
      None = 0,
      DynamicEntity = 2,
      StaticEntity = 3,
    }
    private InfoOneofCase infoCase_ = InfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoOneofCase InfoCase {
      get { return infoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfo() {
      infoCase_ = InfoOneofCase.None;
      info_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Interact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Interact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (DynamicEntity != other.DynamicEntity) return false;
      if (StaticEntity != other.StaticEntity) return false;
      if (InfoCase != other.InfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (infoCase_ == InfoOneofCase.DynamicEntity) hash ^= DynamicEntity.GetHashCode();
      if (infoCase_ == InfoOneofCase.StaticEntity) hash ^= StaticEntity.GetHashCode();
      hash ^= (int) infoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (infoCase_ == InfoOneofCase.DynamicEntity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DynamicEntity);
      }
      if (infoCase_ == InfoOneofCase.StaticEntity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) StaticEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (infoCase_ == InfoOneofCase.DynamicEntity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DynamicEntity);
      }
      if (infoCase_ == InfoOneofCase.StaticEntity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) StaticEntity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (infoCase_ == InfoOneofCase.DynamicEntity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DynamicEntity);
      }
      if (infoCase_ == InfoOneofCase.StaticEntity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StaticEntity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Interact other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      switch (other.InfoCase) {
        case InfoOneofCase.DynamicEntity:
          DynamicEntity = other.DynamicEntity;
          break;
        case InfoOneofCase.StaticEntity:
          StaticEntity = other.StaticEntity;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.DynamicEntity;
            break;
          }
          case 24: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.StaticEntity;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.DynamicEntity;
            break;
          }
          case 24: {
            info_ = input.ReadEnum();
            infoCase_ = InfoOneofCase.StaticEntity;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Attack : pb::IMessage<Attack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Attack> _parser = new pb::MessageParser<Attack>(() => new Attack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attack(Attack other) : this() {
      dynamicEntityUUID_ = other.dynamicEntityUUID_.Clone();
      staticEntityUUID_ = other.staticEntityUUID_.Clone();
      angle_ = other.angle_ != null ? other.angle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attack Clone() {
      return new Attack(this);
    }

    /// <summary>Field number for the "dynamicEntityUUID" field.</summary>
    public const int DynamicEntityUUIDFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_dynamicEntityUUID_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> dynamicEntityUUID_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DynamicEntityUUID {
      get { return dynamicEntityUUID_; }
    }

    /// <summary>Field number for the "staticEntityUUID" field.</summary>
    public const int StaticEntityUUIDFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_staticEntityUUID_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> staticEntityUUID_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StaticEntityUUID {
      get { return staticEntityUUID_; }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 3;
    private global::Universe.Vector3 angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector3 Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dynamicEntityUUID_.Equals(other.dynamicEntityUUID_)) return false;
      if(!staticEntityUUID_.Equals(other.staticEntityUUID_)) return false;
      if (!object.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dynamicEntityUUID_.GetHashCode();
      hash ^= staticEntityUUID_.GetHashCode();
      if (angle_ != null) hash ^= Angle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dynamicEntityUUID_.WriteTo(output, _repeated_dynamicEntityUUID_codec);
      staticEntityUUID_.WriteTo(output, _repeated_staticEntityUUID_codec);
      if (angle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dynamicEntityUUID_.WriteTo(ref output, _repeated_dynamicEntityUUID_codec);
      staticEntityUUID_.WriteTo(ref output, _repeated_staticEntityUUID_codec);
      if (angle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dynamicEntityUUID_.CalculateSize(_repeated_dynamicEntityUUID_codec);
      size += staticEntityUUID_.CalculateSize(_repeated_staticEntityUUID_codec);
      if (angle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attack other) {
      if (other == null) {
        return;
      }
      dynamicEntityUUID_.Add(other.dynamicEntityUUID_);
      staticEntityUUID_.Add(other.staticEntityUUID_);
      if (other.angle_ != null) {
        if (angle_ == null) {
          Angle = new global::Universe.Vector3();
        }
        Angle.MergeFrom(other.Angle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dynamicEntityUUID_.AddEntriesFrom(input, _repeated_dynamicEntityUUID_codec);
            break;
          }
          case 18: {
            staticEntityUUID_.AddEntriesFrom(input, _repeated_staticEntityUUID_codec);
            break;
          }
          case 26: {
            if (angle_ == null) {
              Angle = new global::Universe.Vector3();
            }
            input.ReadMessage(Angle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dynamicEntityUUID_.AddEntriesFrom(ref input, _repeated_dynamicEntityUUID_codec);
            break;
          }
          case 18: {
            staticEntityUUID_.AddEntriesFrom(ref input, _repeated_staticEntityUUID_codec);
            break;
          }
          case 26: {
            if (angle_ == null) {
              Angle = new global::Universe.Vector3();
            }
            input.ReadMessage(Angle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UseSkill : pb::IMessage<UseSkill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UseSkill> _parser = new pb::MessageParser<UseSkill>(() => new UseSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseSkill(UseSkill other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      angle_ = other.angle_ != null ? other.angle_.Clone() : null;
      skill_ = other.skill_ != null ? other.skill_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseSkill Clone() {
      return new UseSkill(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Universe.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private global::Universe.Vector3 angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector3 Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "skill" field.</summary>
    public const int SkillFieldNumber = 3;
    private global::Universe.Skill skill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Skill Skill {
      get { return skill_; }
      set {
        skill_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Angle, other.Angle)) return false;
      if (!object.Equals(Skill, other.Skill)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (angle_ != null) hash ^= Angle.GetHashCode();
      if (skill_ != null) hash ^= Skill.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (skill_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Skill);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (skill_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Skill);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (angle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
      }
      if (skill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseSkill other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.angle_ != null) {
        if (angle_ == null) {
          Angle = new global::Universe.Vector3();
        }
        Angle.MergeFrom(other.Angle);
      }
      if (other.skill_ != null) {
        if (skill_ == null) {
          Skill = new global::Universe.Skill();
        }
        Skill.MergeFrom(other.Skill);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Universe.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (angle_ == null) {
              Angle = new global::Universe.Vector3();
            }
            input.ReadMessage(Angle);
            break;
          }
          case 26: {
            if (skill_ == null) {
              Skill = new global::Universe.Skill();
            }
            input.ReadMessage(Skill);
            break;
          }
          case 34: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Universe.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (angle_ == null) {
              Angle = new global::Universe.Vector3();
            }
            input.ReadMessage(Angle);
            break;
          }
          case 26: {
            if (skill_ == null) {
              Skill = new global::Universe.Skill();
            }
            input.ReadMessage(Skill);
            break;
          }
          case 34: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill(Skill other) : this() {
      skillUuid_ = other.skillUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "skillUuid" field.</summary>
    public const int SkillUuidFieldNumber = 1;
    private string skillUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillUuid {
      get { return skillUuid_; }
      set {
        skillUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillUuid != other.SkillUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillUuid.Length != 0) hash ^= SkillUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SkillUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SkillUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SkillUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SkillUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.SkillUuid.Length != 0) {
        SkillUuid = other.SkillUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SkillUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SkillUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConnectRequest : pb::IMessage<ConnectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectRequest> _parser = new pb::MessageParser<ConnectRequest>(() => new ConnectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRequest(ConnectRequest other) : this() {
      playerUuid_ = other.playerUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectRequest Clone() {
      return new ConnectRequest(this);
    }

    /// <summary>Field number for the "playerUuid" field.</summary>
    public const int PlayerUuidFieldNumber = 1;
    private string playerUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerUuid {
      get { return playerUuid_; }
      set {
        playerUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerUuid != other.PlayerUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerUuid.Length != 0) hash ^= PlayerUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerUuid.Length != 0) {
        PlayerUuid = other.PlayerUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConnectResponse : pb::IMessage<ConnectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectResponse> _parser = new pb::MessageParser<ConnectResponse>(() => new ConnectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectResponse(ConnectResponse other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      world_ = other.world_ != null ? other.world_.Clone() : null;
      chunks_ = other.chunks_.Clone();
      dynamicEntity_ = other.dynamicEntity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectResponse Clone() {
      return new ConnectResponse(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Universe.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "world" field.</summary>
    public const int WorldFieldNumber = 2;
    private global::Universe.World world_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.World World {
      get { return world_; }
      set {
        world_ = value;
      }
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Universe.Chunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(26, global::Universe.Chunk.Parser);
    private readonly pbc::RepeatedField<global::Universe.Chunk> chunks_ = new pbc::RepeatedField<global::Universe.Chunk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Chunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "dynamicEntity" field.</summary>
    public const int DynamicEntityFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Universe.DynamicEntity> _repeated_dynamicEntity_codec
        = pb::FieldCodec.ForMessage(34, global::Universe.DynamicEntity.Parser);
    private readonly pbc::RepeatedField<global::Universe.DynamicEntity> dynamicEntity_ = new pbc::RepeatedField<global::Universe.DynamicEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.DynamicEntity> DynamicEntity {
      get { return dynamicEntity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (!object.Equals(World, other.World)) return false;
      if(!chunks_.Equals(other.chunks_)) return false;
      if(!dynamicEntity_.Equals(other.dynamicEntity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (world_ != null) hash ^= World.GetHashCode();
      hash ^= chunks_.GetHashCode();
      hash ^= dynamicEntity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      chunks_.WriteTo(output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      dynamicEntity_.WriteTo(ref output, _repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (world_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(World);
      }
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      size += dynamicEntity_.CalculateSize(_repeated_dynamicEntity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectResponse other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Universe.Player();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.world_ != null) {
        if (world_ == null) {
          World = new global::Universe.World();
        }
        World.MergeFrom(other.World);
      }
      chunks_.Add(other.chunks_);
      dynamicEntity_.Add(other.dynamicEntity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Universe.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Universe.World();
            }
            input.ReadMessage(World);
            break;
          }
          case 26: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 34: {
            dynamicEntity_.AddEntriesFrom(input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Universe.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Universe.World();
            }
            input.ReadMessage(World);
            break;
          }
          case 26: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 34: {
            dynamicEntity_.AddEntriesFrom(ref input, _repeated_dynamicEntity_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Player : pb::IMessage<Player>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player(Player other) : this() {
      name_ = other.name_;
      uuid_ = other.uuid_;
      level_ = other.level_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player Clone() {
      return new Player(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::Universe.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uuid != other.Uuid) return false;
      if (Level != other.Level) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uuid);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uuid);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Player other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uuid = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uuid = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class World : pb::IMessage<World>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<World> _parser = new pb::MessageParser<World>(() => new World());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<World> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World(World other) : this() {
      uuid_ = other.uuid_;
      name_ = other.name_;
      level_ = other.level_;
      length_ = other.length_;
      width_ = other.width_;
      scaleXY_ = other.scaleXY_;
      scaleHeight_ = other.scaleHeight_;
      seed_ = other.seed_;
      chunkWidth_ = other.chunkWidth_;
      population_ = other.population_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World Clone() {
      return new World(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 4;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 5;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "scaleXY" field.</summary>
    public const int ScaleXYFieldNumber = 6;
    private int scaleXY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScaleXY {
      get { return scaleXY_; }
      set {
        scaleXY_ = value;
      }
    }

    /// <summary>Field number for the "scaleHeight" field.</summary>
    public const int ScaleHeightFieldNumber = 7;
    private int scaleHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScaleHeight {
      get { return scaleHeight_; }
      set {
        scaleHeight_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 8;
    private string seed_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Seed {
      get { return seed_; }
      set {
        seed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chunk_width" field.</summary>
    public const int ChunkWidthFieldNumber = 9;
    private int chunkWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChunkWidth {
      get { return chunkWidth_; }
      set {
        chunkWidth_ = value;
      }
    }

    /// <summary>Field number for the "population" field.</summary>
    public const int PopulationFieldNumber = 10;
    private int population_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Population {
      get { return population_; }
      set {
        population_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as World);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(World other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (Length != other.Length) return false;
      if (Width != other.Width) return false;
      if (ScaleXY != other.ScaleXY) return false;
      if (ScaleHeight != other.ScaleHeight) return false;
      if (Seed != other.Seed) return false;
      if (ChunkWidth != other.ChunkWidth) return false;
      if (Population != other.Population) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (ScaleXY != 0) hash ^= ScaleXY.GetHashCode();
      if (ScaleHeight != 0) hash ^= ScaleHeight.GetHashCode();
      if (Seed.Length != 0) hash ^= Seed.GetHashCode();
      if (ChunkWidth != 0) hash ^= ChunkWidth.GetHashCode();
      if (Population != 0) hash ^= Population.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Length != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Length);
      }
      if (Width != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Width);
      }
      if (ScaleXY != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ScaleXY);
      }
      if (ScaleHeight != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ScaleHeight);
      }
      if (Seed.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Seed);
      }
      if (ChunkWidth != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ChunkWidth);
      }
      if (Population != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Population);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Length != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Length);
      }
      if (Width != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Width);
      }
      if (ScaleXY != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ScaleXY);
      }
      if (ScaleHeight != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ScaleHeight);
      }
      if (Seed.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Seed);
      }
      if (ChunkWidth != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ChunkWidth);
      }
      if (Population != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Population);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (ScaleXY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScaleXY);
      }
      if (ScaleHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScaleHeight);
      }
      if (Seed.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Seed);
      }
      if (ChunkWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChunkWidth);
      }
      if (Population != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Population);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(World other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.ScaleXY != 0) {
        ScaleXY = other.ScaleXY;
      }
      if (other.ScaleHeight != 0) {
        ScaleHeight = other.ScaleHeight;
      }
      if (other.Seed.Length != 0) {
        Seed = other.Seed;
      }
      if (other.ChunkWidth != 0) {
        ChunkWidth = other.ChunkWidth;
      }
      if (other.Population != 0) {
        Population = other.Population;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Length = input.ReadInt32();
            break;
          }
          case 40: {
            Width = input.ReadInt32();
            break;
          }
          case 48: {
            ScaleXY = input.ReadInt32();
            break;
          }
          case 56: {
            ScaleHeight = input.ReadInt32();
            break;
          }
          case 66: {
            Seed = input.ReadString();
            break;
          }
          case 72: {
            ChunkWidth = input.ReadInt32();
            break;
          }
          case 80: {
            Population = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Length = input.ReadInt32();
            break;
          }
          case 40: {
            Width = input.ReadInt32();
            break;
          }
          case 48: {
            ScaleXY = input.ReadInt32();
            break;
          }
          case 56: {
            ScaleHeight = input.ReadInt32();
            break;
          }
          case 66: {
            Seed = input.ReadString();
            break;
          }
          case 72: {
            ChunkWidth = input.ReadInt32();
            break;
          }
          case 80: {
            Population = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Move : pb::IMessage<Move>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Move> _parser = new pb::MessageParser<Move>(() => new Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move(Move other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      jump_ = other.jump_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move Clone() {
      return new Move(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Universe.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "jump" field.</summary>
    public const int JumpFieldNumber = 3;
    private bool jump_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Jump {
      get { return jump_; }
      set {
        jump_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (Jump != other.Jump) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Jump != false) hash ^= Jump.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (Jump != false) {
        output.WriteRawTag(24);
        output.WriteBool(Jump);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (Jump != false) {
        output.WriteRawTag(24);
        output.WriteBool(Jump);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Jump != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Move other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Jump != false) {
        Jump = other.Jump;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 24: {
            Jump = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 24: {
            Jump = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Chunk : pb::IMessage<Chunk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Chunk> _parser = new pb::MessageParser<Chunk>(() => new Chunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chunk(Chunk other) : this() {
      uuid_ = other.uuid_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      staticEntity_ = other.staticEntity_.Clone();
      tiles_ = other.tiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chunk Clone() {
      return new Chunk(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Universe.Vector2Int position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector2Int Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "staticEntity" field.</summary>
    public const int StaticEntityFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Universe.StaticEntity> _repeated_staticEntity_codec
        = pb::FieldCodec.ForMessage(26, global::Universe.StaticEntity.Parser);
    private readonly pbc::RepeatedField<global::Universe.StaticEntity> staticEntity_ = new pbc::RepeatedField<global::Universe.StaticEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.StaticEntity> StaticEntity {
      get { return staticEntity_; }
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Universe.Tile> _repeated_tiles_codec
        = pb::FieldCodec.ForMessage(34, global::Universe.Tile.Parser);
    private readonly pbc::RepeatedField<global::Universe.Tile> tiles_ = new pbc::RepeatedField<global::Universe.Tile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Universe.Tile> Tiles {
      get { return tiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if(!staticEntity_.Equals(other.staticEntity_)) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      hash ^= staticEntity_.GetHashCode();
      hash ^= tiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      staticEntity_.WriteTo(output, _repeated_staticEntity_codec);
      tiles_.WriteTo(output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      staticEntity_.WriteTo(ref output, _repeated_staticEntity_codec);
      tiles_.WriteTo(ref output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      size += staticEntity_.CalculateSize(_repeated_staticEntity_codec);
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chunk other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Vector2Int();
        }
        Position.MergeFrom(other.Position);
      }
      staticEntity_.Add(other.staticEntity_);
      tiles_.Add(other.tiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Universe.Vector2Int();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            staticEntity_.AddEntriesFrom(input, _repeated_staticEntity_codec);
            break;
          }
          case 34: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Universe.Vector2Int();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            staticEntity_.AddEntriesFrom(ref input, _repeated_staticEntity_codec);
            break;
          }
          case 34: {
            tiles_.AddEntriesFrom(ref input, _repeated_tiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Tile : pb::IMessage<Tile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tile> _parser = new pb::MessageParser<Tile>(() => new Tile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tile(Tile other) : this() {
      type_ = other.type_;
      elevation_ = other.elevation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tile Clone() {
      return new Tile(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Universe.TileType type_ = global::Universe.TileType.Dirt;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.TileType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "elevation" field.</summary>
    public const int ElevationFieldNumber = 2;
    private float elevation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Elevation {
      get { return elevation_; }
      set {
        elevation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Elevation, other.Elevation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Universe.TileType.Dirt) hash ^= Type.GetHashCode();
      if (Elevation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Elevation);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Universe.TileType.Dirt) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Elevation != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Elevation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Universe.TileType.Dirt) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Elevation != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Elevation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Universe.TileType.Dirt) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Elevation != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tile other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Universe.TileType.Dirt) {
        Type = other.Type;
      }
      if (other.Elevation != 0F) {
        Elevation = other.Elevation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Universe.TileType) input.ReadEnum();
            break;
          }
          case 21: {
            Elevation = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Universe.TileType) input.ReadEnum();
            break;
          }
          case 21: {
            Elevation = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// COORDINATE MESSAGES
  /// </summary>
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      angle_ = other.angle_ != null ? other.angle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int Position_FieldNumber = 1;
    private global::Universe.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector3 Position_ {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private global::Universe.Vector3 angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Vector3 Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position_, other.Position_)) return false;
      if (!object.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position_.GetHashCode();
      if (angle_ != null) hash ^= Angle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position_);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position_);
      }
      if (angle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position_);
      }
      if (angle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position_ = new global::Universe.Vector3();
        }
        Position_.MergeFrom(other.Position_);
      }
      if (other.angle_ != null) {
        if (angle_ == null) {
          Angle = new global::Universe.Vector3();
        }
        Angle.MergeFrom(other.Angle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position_ = new global::Universe.Vector3();
            }
            input.ReadMessage(Position_);
            break;
          }
          case 18: {
            if (angle_ == null) {
              Angle = new global::Universe.Vector3();
            }
            input.ReadMessage(Angle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position_ = new global::Universe.Vector3();
            }
            input.ReadMessage(Position_);
            break;
          }
          case 18: {
            if (angle_ == null) {
              Angle = new global::Universe.Vector3();
            }
            input.ReadMessage(Angle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Vector3 : pb::IMessage<Vector3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3(Vector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Vector2 : pb::IMessage<Vector2>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector2> _parser = new pb::MessageParser<Vector2>(() => new Vector2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2(Vector2 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2 Clone() {
      return new Vector2(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector2 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Vector2Int : pb::IMessage<Vector2Int>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector2Int> _parser = new pb::MessageParser<Vector2Int>(() => new Vector2Int());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector2Int> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2Int() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2Int(Vector2Int other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2Int Clone() {
      return new Vector2Int(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector2Int);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector2Int other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector2Int other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DynamicEntity
  /// </summary>
  public sealed partial class DynamicEntity : pb::IMessage<DynamicEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DynamicEntity> _parser = new pb::MessageParser<DynamicEntity>(() => new DynamicEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicEntity(DynamicEntity other) : this() {
      uuid_ = other.uuid_;
      name_ = other.name_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicEntity Clone() {
      return new DynamicEntity(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Universe.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Universe.DynamicEntityType type_ = global::Universe.DynamicEntityType.Player;
    /// <summary>
    /// Stats stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.DynamicEntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Type != global::Universe.DynamicEntityType.Player) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (Type != global::Universe.DynamicEntityType.Player) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (Type != global::Universe.DynamicEntityType.Player) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Type != global::Universe.DynamicEntityType.Player) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicEntity other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Type != global::Universe.DynamicEntityType.Player) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            Type = (global::Universe.DynamicEntityType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            Type = (global::Universe.DynamicEntityType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// StaticEntity
  /// </summary>
  public sealed partial class StaticEntity : pb::IMessage<StaticEntity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StaticEntity> _parser = new pb::MessageParser<StaticEntity>(() => new StaticEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StaticEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Universe.WorldReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaticEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaticEntity(StaticEntity other) : this() {
      uuid_ = other.uuid_;
      name_ = other.name_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaticEntity Clone() {
      return new StaticEntity(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Universe.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Universe.StaticEntityType type_ = global::Universe.StaticEntityType.Empty;
    /// <summary>
    /// Stats stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Universe.StaticEntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StaticEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StaticEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Type != global::Universe.StaticEntityType.Empty) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (Type != global::Universe.StaticEntityType.Empty) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (Type != global::Universe.StaticEntityType.Empty) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Type != global::Universe.StaticEntityType.Empty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StaticEntity other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Universe.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Type != global::Universe.StaticEntityType.Empty) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            Type = (global::Universe.StaticEntityType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Universe.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            Type = (global::Universe.StaticEntityType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
